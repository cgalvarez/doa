require 'listen'

cmd_ssh = "ssh -l <%= @ssh_user %> <%= DOA::SSH::OPT_RSYNC %> -i <%= @quotes %><%= @ssh_key %><%= @quotes %>"
cmd_partial_rsync = "rsync -e \"#{ cmd_ssh }\" <%= Sync::OPT_RSYNC %> --log-file <%= @quotes %><%= @from.session.log_rsync %><%= @quotes %> <% @excludes.each do |exclude| %>--exclude <%= @quotes %><%= exclude %><%= @quotes %> <% end %>"

<% if @from.instance_of? DOA::Guest %>
# Ensure paths to listen to exist and have the right permissions and ownership
<% @listen_to.each do |path| %>
`sudo mkdir -p <%= path %>; sudo chown -R <%= @rsync_user %>:<%= @rsync_user %> <%= path %>; sudo find <%= path %> -type d -exec sudo chmod 755 {} \; sudo find <%= path %> -type f -exec sudo chmod 644 {} \;`
<% end %>
<% end %>

listener = Listen.to("<%= @listen_to.join('","') %>") do |modified, added, removed|
  (modified + added + removed).compact.each do |path|
    puts "Modified: #{ modified }" if !modified.empty?
    puts "Added: #{ added }" if !added.empty?
    puts "Removed: #{ removed }" if !removed.empty?
    <% first_path = @conditions.keys[0] %>
    <% @conditions.each do |site_path, rsync_cmd| %>
    <%= site_path == first_path ? 'if' : 'elsif' %> path.start_with?('<%= site_path %>')
      <%= rsync_cmd %>
    <% end %>
    end
  end
end
<% if @from.instance_of? DOA::Host %>
# Sync before start listening
<% @conditions.values.each do |rsync_cmd| %>
<%= rsync_cmd %>
<% end %>
<% end %>

# Start listening (...and ignoring!)
listener.start
<% @ignores.each_with_index do |ignore, idx| %>
listener.ignore<%= idx == 0 ? '!' : '' %> /^<%= ignore %>/
<% end %>
sleep
